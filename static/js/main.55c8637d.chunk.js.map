{"version":3,"sources":["components/header/index.js","components/header/header.js","components/item-status-filter/index.js","components/item-status-filter/item-status-filter.jsx","components/search-bar/index.js","components/search-bar/search-bar.js","components/todo-list-item/index.js","components/todo-list-item/todo-list-item.js","components/todo-list/index.js","components/todo-list/todo-list.js","components/item-add-form/index.js","components/item-add-form/item-add-form.js","components/App/index.js","components/App/App.js","index.js"],"names":["Header","toDo","done","className","ItemStatusFilter","buttons","name","label","this","props","filter","onFilterChange","map","clazz","key","type","onClick","React","Component","SearchBar","state","term","onSearchChange","e","target","value","setState","placeholder","onChange","ToDoListItem","onDeleted","important","onToggleImportant","onToggleDone","classNames","ToDoList","todos","elements","item","id","itemsProps","ItemAddForm","onLabelChange","console","log","onSubmit","preventDefault","addTodoItem","App","maxId","toDos","createToDoItem","deleteItem","index","findIndex","el","slice","addNewToDo","text","newTodoElem","toggleProperty","arr","propName","oldItem","newItem","items","toLowerCase","indexOf","visibleItems","search","doneCount","length","todoCount","ReactDom","render","document","getElementById"],"mappings":"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","file":"static/js/main.55c8637d.chunk.js","sourcesContent":["\nimport Header from './header'\n\nexport default Header","import React from \"react\";\nimport \"./header.css\";\n\nconst Header = ({ toDo, done }) => {\n  return (\n    <div className=\"app-header\">\n      <h1> YOUR TO DO LIST </h1>\n      <h3>\n        <span>{toDo}</span> more to do and <span>{done}</span> done\n      </h3>\n    </div>\n  );\n};\n\nexport default Header;\n","\nimport ItemStatusFilter from './item-status-filter'\n\nexport default ItemStatusFilter","import React from \"react\";\n\nexport default class ItemStatusFilter extends React.Component {\n  buttons = [\n    { name: \"all\", label: \"All\" },\n    { name: \"active\", label: \"Active\" },\n    { name: \"done\", label: \"Done\" },\n  ];\n\n  render() {\n    const { filter,onFilterChange } = this.props;\n\n    const buttons = this.buttons.map(({ name, label }) => {\n      const isActive = filter === name;\n      const clazz = isActive ? 'btn-info': 'btn-outline-secondary'\n\n      return (\n        <button key={name} \n        type=\"button\" \n        className={`btn ${clazz}`}\n        onClick={()=>onFilterChange(name)}\n        >\n          {label}\n        </button>\n      );\n    });\n\n    return <div className=\"btn-group\">{buttons}</div>;\n  }\n}\n","\nimport SearchBar from './search-bar'\n\nexport default SearchBar","import React, { Component } from \"react\";\nimport ItemStatusFilter from \"../item-status-filter\";\nimport \"./search-bar.css\";\n\n\n\nexport default class SearchBar extends Component {\n  state = {\n    term: \"\",\n  };\n\n  onSearchChange = (e) => {\n    const term = e.target.value\n    this.setState({term});\n    this.props.onSearchChange(term)\n  }\n\n  render() {\n    const searchText = \"Search todos in list\";\n    return (\n      <div className=\"search-bar \">\n        <input\n          className=\"form-control search-input \"\n          placeholder={searchText}\n          onChange={this.onSearchChange}\n          value={this.state.term}\n        />\n       \n      </div>\n    );\n  }\n}\n","\nimport ToDoListItem from './todo-list-item'\n\nexport default ToDoListItem","import React, { Component } from \"react\";\nimport \"./todo-list-item.css\";\n\n// const ToDOListItem = (props) => {\n//   return (\n\n//   <span>{props.label}</span>\n\n//   );\n// };\n\n//   export default ToDOListItem\n\nexport default class ToDoListItem extends Component {\n  \n\n  render() {\n    const {\n      label,\n      onDeleted,\n      done,\n      important,\n      onToggleImportant,\n      onToggleDone,\n    } = this.props;\n\n    let classNames = \"todo-list-item\";\n    if (done) {\n      classNames += \" done\";\n    }\n    if (important) {\n      classNames += \" important\";\n    }\n\n    return (\n      <span className={classNames}>\n        <span className=\"todo-list-item-label \" onClick={onToggleDone}>\n          {label}\n        </span>\n\n        <i className=\"fa fa-burn\"> </i>\n\n        <button\n          type=\"button\"\n          className=\"btn btn-outline-success btn-sm float-right\"\n          onClick={onToggleImportant}\n        >\n          <i className=\"fa fa-exclamation\" />\n        </button>\n\n        <button\n          type=\"button\"\n          className=\"btn btn-outline-danger btn-sm float-right\"\n          onClick={onDeleted}\n        >\n          <i className=\"fa fa-trash-o\" />\n        </button>\n      </span>\n    );\n  }\n}\n","\nimport ToDoList from './todo-list'\n\nexport default ToDoList","import React from \"react\";\nimport ToDoListItem from \"../todo-list-item\";\nimport \"./todo-list.css\";\n\nconst ToDoList = ({ todos, onDeleted, onToggleImportant, onToggleDone }) => {\n  const elements = todos.map((item) => {\n    const { id, ...itemsProps } = item;\n    return (\n      // <li key={item.id}>\n\n      <li key={id} className=\"list-group-item\">\n        {/* <ToDOListItem label={item.label} important={item.important} /> если совпадают имена переменных и свойсва оператора, если мы хотим передать каждое свойство обьекта / можно это сделать с помощью СПРЕД оператора  */}\n        {/* <ToDOListItem {...item} /> */}\n        <ToDoListItem\n          {...itemsProps}\n          onDeleted={() => onDeleted(id)}\n          onToggleImportant={() => onToggleImportant(id)}\n          onToggleDone={() => onToggleDone(id)}\n        />\n      </li>\n    );\n  });\n  return <ul className=\"list-groupe todo-list\">{elements}</ul>;\n};\n\nexport default ToDoList;\n","\nimport ItemAddForm from './item-add-form'\n\nexport default ItemAddForm","import React, { Component } from \"react\";\nimport \"./item-add-form.css\";\n\nexport default class ItemAddForm extends Component {\n  state = {\n    label: \"\",\n  };\n\n  onLabelChange = (e) => {\n    console.log(e.target.value)\n    this.setState({label:e.target.value})\n\n  };\n\n  onSubmit = (e) => {\n    e.preventDefault()\n    this.props.addTodoItem(this.state.label)\n    this.setState({label:''})\n   \n  };\n  render() {\n    return (\n      <form className=\"item-add-form d-flex\" onSubmit={this.onSubmit}>\n        <input\n          type=\"text\"\n          className=\"form-control\"\n          placeholder=\"add new To-Do...\"\n          onChange={this.onLabelChange}\n          value={this.state.label}\n\n         \n        />\n        <button className=\"btn btn-outline-secondary btn-sm \">Add item</button>\n      </form>\n    );\n  }\n}\n","import App from './App'\n\nexport default App","import React, { Component } from \"react\";\nimport ReactDom from \"react-dom\";\nimport './App.css';\n\nimport Header from \"../header\";\nimport SearchBar from \"../search-bar\";\nimport ItemStatusFilter from \"../item-status-filter\";\nimport ToDoList from \"../todo-list\";\nimport ItemAddForm from \"../item-add-form\";\n\n\nexport default class App extends Component {\n  maxId = 100;\n\n  state = {\n    toDos: [\n      this.createToDoItem(\"find a new job \"),\n      this.createToDoItem(\"Drink coffe\"),\n      this.createToDoItem(\"Learn React\"),\n      this.createToDoItem(\"More practice!\"),\n      { id: 1, label: \"Make app!!!\", important: false },\n    ],\n    term: \"\",\n    filter: \"all\", //active all done\n  };\n  createToDoItem(text) {\n    return {\n      id: this.maxId++,\n      label: text,\n      important: false,\n      done: false,\n    };\n  }\n\n  deleteItem = (id) => {\n    console.log(id);\n    this.setState(({ toDos }) => {\n      const index = toDos.findIndex((el) => el.id === id);\n      const newArr = [...toDos.slice(0, index), ...toDos.slice(index + 1)];\n      return {\n        toDos: newArr,\n      };\n    });\n  };\n\n  addNewToDo = (text) => {\n    console.log(text);\n\n    const newTodoElem = this.createToDoItem(text);\n    this.setState(({ toDos }) => {\n      const newArr = [...toDos, newTodoElem];\n      return {\n        toDos: newArr,\n      };\n    });\n  };\n\n  toggleProperty(arr, id, propName) {\n    const index = arr.findIndex((el) => el.id === id);\n    //1. update object\n    const oldItem = arr[index];\n    const newItem = { ...oldItem, [propName]: !oldItem[propName] };\n    //2.construct new array\n    return [...arr.slice(0, index), newItem, ...arr.slice(index + 1)];\n  }\n\n  onToggleImportant = (id) => {\n    console.log(\"important\", id);\n    this.setState(({ toDos }) => {\n      return {\n        toDos: this.toggleProperty(toDos, id, \"important\"),\n      };\n    });\n  };\n\n  onToggleDone = (id) => {\n    console.log(\"Done\", id);\n    this.setState(({ toDos }) => {\n      return {\n        toDos: this.toggleProperty(toDos, id, \"done\"),\n      };\n    });\n  };\n\n  onSearchChange = (term) => {\n    this.setState({ term });\n  };\n\n  onFilterChange = (filter) => {\n    this.setState({ filter });\n  };\n\n  search(items, term) {\n    if (term === 0) {\n      return items;\n    }\n    return items.filter((item) => {\n      return item.label.toLowerCase().indexOf(term.toLowerCase()) > -1;\n    });\n  }\n\n\n  filter(items, filter) {\n    switch (filter) {\n      case \"all\":\n        return items;\n      case \"active\":\n        return items.filter((item) => !item.done);\n      case \"done\":\n        return items.filter((item) => item.done);\n      default:\n        return items;\n    }\n  }\n\n  render() {\n    const { toDos, term, filter } = this.state;\n    const visibleItems = this.filter(this.search(toDos, term), filter);\n\n    const doneCount = toDos.filter((el) => el.done).length;\n    const todoCount = toDos.length - doneCount;\n\n    return (\n      <div className=\"todo-app\">\n        <Header toDo={todoCount} done={doneCount} />\n        <div className=\"search-panel d-flex justify-content-between\">\n          <SearchBar onSearchChange={this.onSearchChange} className='search-input'/>\n          <ItemStatusFilter\n            filter={filter}\n            onFilterChange={this.onFilterChange}\n          />\n        </div>\n        <ToDoList\n          todos={visibleItems}\n          onDeleted={this.deleteItem}\n          onToggleImportant={this.onToggleImportant}\n          onToggleDone={this.onToggleDone}\n        />\n        <ItemAddForm addTodoItem={this.addNewToDo} />\n      </div>\n    );\n  }\n}\n","import React from \"react\";\nimport ReactDom from \"react-dom\";\n\nimport App from './components/App'\n\nReactDom.render(<App />, document.getElementById(\"root\"));\n"],"sourceRoot":""}